{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","description","title","github","stack","url","image","index","className","fluid","childImageSharp","map","item","key","id","href","Projects","projects","showLink","Title","project","to","Hero","file","icon","text","Services","services","service","Jobs","jobs","allStrapiJobs","nodes","React","useState","value","setValue","company","position","date","desc","strapiId","onClick","name","query","data","allStrapiProjects","blogs","allStrapiBlogs","Layout","Blogs","Blog","category","slug","blog"],"mappings":"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","file":"component---src-pages-index-js-980b095947350e30d942.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({description,title,github,stack,url,image,index}) => {\n  return (\n    <article className=\"project\">\n    {image && (\n      <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      )\n    }\n      <div className=\"project-info\">\n        <span className=\"project-number\">0{index + 1}.</span>\n        <h3>{title || \"default title\"}</h3>\n        <p className=\"project-desc\">\n          {description}\n        </p>\n        <div className=\"project-stack\">\n          {stack.map((item) => {\n            return (\n              <span key={item.id}>\n                {item.title}\n              </span>\n            )\n          })}\n        </div>\n        <div className=\"project-links\">\n          <a href={github}>\n            <FaGithubSquare className=\"project-icon\" />\n          </a>\n          <a href={url}>\n            <FaShareSquare className=\"project-icon\" />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProject.propTypes = {\n  title:PropTypes.string.isRequired,\n  github:PropTypes.string.isRequired,\n  url:PropTypes.string.isRequired,\n  description:PropTypes.string.isRequired,\n  image:PropTypes.object.isRequired,\n  stack:PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return (\n            <Project key={project.id} index={index} {...project} />\n            )\n        })}\n      </div>\n      {\n        showLink && <Link to='/projects' className=\"btn center-btn\">\n          projects\n        </Link>\n      }\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\n// ...GatsbyImageSharpFluid\nconst query = graphql`\n  {\n    file(relativePath: {eq: \"hero-img.png\"}) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(query)\n  \n  return (\n    <header className=\"hero\">\n      <div className=\"section-center hero-center\">\n        <article className=\"hero-info\">\n          <div>\n            <div className=\"underline\">\n              <h1>i'm Ebuka</h1>\n              <h4>Freelance Software Engineer & Data Analyst</h4>\n              <Link to='/contact' className=\"btn\">\n                contact me\n              </Link>\n              <SocialLinks />\n            </div>\n          </div>\n        </article>\n        <Image fluid={fluid} className=\"hero-img\" />\n      </div>\n    </header>\n  );\n}\n\nexport default Hero\n","import React from \"react\"\nimport { FaCode, FaSketch, FaAndroid } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"web design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 3,\n    icon: <FaAndroid className=\"service-icon\" />,\n    title: \"app design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"services\" />\n      <div className=\"section-center services-center\">\n        {services.map(service => {\n            const { id, icon, title, text } = service\n    \n            return (\n              <article key={id} className=\"service\">\n                {icon}\n                <h4>{title}</h4>\n                <div className=\"underline\"></div>\n                <p>{text}</p>\n              </article>\n            );\n          })}\n      </div>\n    </section>\n  );\n}\n\nexport default Services\n","import React from \"react\"\nimport Title from \"./Title\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: {fields: strapiId, order: DESC}) {\n      nodes {\n        strapiId\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data = useStaticQuery(query);\n  const {\n    allStrapiJobs : {nodes : jobs},\n  } = data\n\n  const [value, setValue] = React.useState(0)\n\n  const {company, position, date, desc} = jobs[value]\n\n  return (\n    <section className=\"section jobs\">\n      <Title title=\"experience\" />\n      <div className=\"jobs-center\">\n        <div className=\"btn-container\">\n          {jobs.map((item, index) => {\n            return (\n              <button\n                key={item.strapiId}\n                onClick={() => setValue(index)}\n                className={`job-btn ${index === value && \"active-btn\"}`}\n              >\n                {item.company}\n              </button>\n            )\n          })}\n        </div>\n        <article className=\"job-info\">\n          <h3>{position}</h3>\n          <h4>{company}</h4>\n          <p className=\"job-date\">{date}</p>\n          {\n            desc.map((item) => {\n              return (\n                <div key={item.id} className=\"job-desc\">\n                  <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\n                  <p>{item.name}</p>\n                </div>\n              )\n            })\n          }\n        </article>\n      </div>\n      <Link to='/about' className=\"btn center-btn\">\n        more info\n      </Link>\n    </section>\n  )\n}\n\nexport default Jobs\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport Blogs from \"../components/Blogs\"\nexport default ({ data }) => {\n  const {\n    allStrapiProjects : {nodes : projects},\n    allStrapiBlogs : {nodes : blogs},\n  } = data\n\n  return (\n    <Layout>\n      <Hero />\n      <Services />\n      <Jobs />\n      <Projects projects={projects} title=\"featured projects\" showLink />\n      <Blogs blogs={blogs} title=\"latest articles\" showLink />\n    </Layout>)\n}\nexport const query = graphql`\n  {\n    allStrapiProjects(filter: {featured: {eq: true}}) {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n\n    allStrapiBlogs(sort: {fields: date, order: DESC}, limit: 3) {\n      nodes {\n        slug\n        content\n        desc\n        date(formatString: \"MMM Do, YYYY\")\n        id\n        title\n        category\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n// ...GatsbyImageSharpFluid\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nconst Blog = ({id, title, image, date, category, slug, desc}) => {\n  return (\n    <Link to={`/blogs/${slug}`} key={id} className=\"blog\">\n      <article>\n      {image && (\n        <Image fluid={image.childImageSharp.fluid} className=\"blog-img\" />\n      )}\n        <div className=\"blog-card\">\n          <h4>{title}</h4>\n          <p>{desc}</p>\n          <div className=\"blog-footer\">\n            <p>{category}</p>\n            <p>{date}</p>\n          </div>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nBlog.propTypes = {\n  id:PropTypes.string.isRequired,\n  title:PropTypes.string.isRequired,\n  date:PropTypes.string.isRequired,\n  category:PropTypes.string.isRequired,\n  desc:PropTypes.string.isRequired,\n  slug:PropTypes.string.isRequired,\n  image:PropTypes.object.isRequired,\n}\n\nexport default Blog\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\nimport { Link } from \"gatsby\"\nexport const Blogs = ({blogs, title, showLink}) => {\n  return (\n    <section className=\"section\">\n      <Title title={title} />\n      <div className=\"section-center blogs-center\">\n        {blogs.map((blog) => {\n          return (\n            <Blog key={blog.id} {...blog} />\n          )\n        })}\n      </div>\n      {\n        showLink && <Link to='/blog' className=\"btn center-btn\">\n        blog\n        </Link>\n      }\n    </section>\n  )\n}\nexport default Blogs\n"],"sourceRoot":""}