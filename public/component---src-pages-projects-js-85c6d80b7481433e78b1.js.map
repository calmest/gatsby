{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js"],"names":["query","ProjectsPage","projects","data","allStrapiProjects","nodes","className","title","Project","description","github","stack","url","image","index","fluid","childImageSharp","map","item","key","id","href","Projects","showLink","Title","project","to"],"mappings":"6FAAA,8FAiBaA,EAAK,aAyBHC,UApCM,SAAC,GAEf,IAD6BC,EAC9B,EADJC,KAAOC,kBAAoBC,MAE3B,OACE,kBAAC,IAAD,KACE,6BAASC,UAAU,iBACjB,kBAAC,IAAD,CAAUJ,SAAUA,EAAUK,MAAM,qB,kHCoC7BC,EA5CC,SAAC,GAAsD,IAArDC,EAAoD,EAApDA,YAAYF,EAAwC,EAAxCA,MAAMG,EAAkC,EAAlCA,OAAOC,EAA2B,EAA3BA,MAAMC,EAAqB,EAArBA,IAAIC,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,MACzD,OACE,6BAASR,UAAU,WAClBO,GACC,kBAAC,IAAD,CAAOE,MAAOF,EAAMG,gBAAgBD,MAAOT,UAAU,gBAGrD,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,IAAmCQ,EAAQ,EAA3C,KACA,4BAAKP,GAAS,iBACd,uBAAGD,UAAU,gBACVG,GAEH,yBAAKH,UAAU,iBACZK,EAAMM,KAAI,SAACC,GACV,OACE,0BAAMC,IAAKD,EAAKE,IACbF,EAAKX,WAKd,yBAAKD,UAAU,iBACb,uBAAGe,KAAMX,GACP,kBAAC,IAAD,CAAgBJ,UAAU,kBAE5B,uBAAGe,KAAMT,GACP,kBAAC,IAAD,CAAeN,UAAU,sB,YCPtBgB,IApBE,SAAC,GAAmC,IAAjCpB,EAAgC,EAAhCA,SAAUK,EAAsB,EAAtBA,MAAOgB,EAAe,EAAfA,SACnC,OACE,6BAASjB,UAAU,oBACjB,kBAACkB,EAAA,EAAD,CAAOjB,MAAOA,IACd,yBAAKD,UAAU,kCACZJ,EAASe,KAAI,SAACQ,EAASX,GACtB,OACE,kBAAC,EAAD,eAASK,IAAKM,EAAQL,GAAIN,MAAOA,GAAWW,QAKhDF,GAAY,kBAAC,IAAD,CAAMG,GAAG,YAAYpB,UAAU,kBAA/B","file":"component---src-pages-projects-js-85c6d80b7481433e78b1.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport Projects from \"../components/Projects\"\n// ...GatsbyImageSharpFluid\n\nconst ProjectsPage = ({\n  data: {allStrapiProjects: {nodes: projects}}\n}) => {\n  return (\n    <Layout>\n      <section className=\"projects-page\">\n        <Projects projects={projects} title=\"all projects\" />\n      </section>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  {\n    allStrapiProjects {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n  }\n`\n\nexport default ProjectsPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({description,title,github,stack,url,image,index}) => {\n  return (\n    <article className=\"project\">\n    {image && (\n      <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      )\n    }\n      <div className=\"project-info\">\n        <span className=\"project-number\">0{index + 1}.</span>\n        <h3>{title || \"default title\"}</h3>\n        <p className=\"project-desc\">\n          {description}\n        </p>\n        <div className=\"project-stack\">\n          {stack.map((item) => {\n            return (\n              <span key={item.id}>\n                {item.title}\n              </span>\n            )\n          })}\n        </div>\n        <div className=\"project-links\">\n          <a href={github}>\n            <FaGithubSquare className=\"project-icon\" />\n          </a>\n          <a href={url}>\n            <FaShareSquare className=\"project-icon\" />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProject.propTypes = {\n  title:PropTypes.string.isRequired,\n  github:PropTypes.string.isRequired,\n  url:PropTypes.string.isRequired,\n  description:PropTypes.string.isRequired,\n  image:PropTypes.object.isRequired,\n  stack:PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return (\n            <Project key={project.id} index={index} {...project} />\n            )\n        })}\n      </div>\n      {\n        showLink && <Link to='/projects' className=\"btn center-btn\">\n          projects\n        </Link>\n      }\n    </section>\n  )\n}\n\nexport default Projects\n"],"sourceRoot":""}